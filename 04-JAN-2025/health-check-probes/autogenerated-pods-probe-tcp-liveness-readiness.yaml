apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"goproxy"},"name":"goproxy","namespace":"default"},"spec":{"containers":[{"image":"registry.k8s.io/goproxy:0.1","livenessProbe":{"initialDelaySeconds":15,"periodSeconds":10,"tcpSocket":{"port":8080}},"name":"goproxy","ports":[{"containerPort":8080}],"readinessProbe":{"initialDelaySeconds":15,"periodSeconds":10,"tcpSocket":{"port":8080}}}]}}
  creationTimestamp: "2025-01-04T09:52:36Z"
  labels:
    app: goproxy
  name: goproxy
  namespace: default
  resourceVersion: "300888"
  uid: ce4c2b2d-16a9-491c-96bc-d5b0a344f424
spec:
  containers:
  - image: registry.k8s.io/goproxy:0.1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      tcpSocket:
        port: 8080
      timeoutSeconds: 1
    name: goproxy
    ports:
    - containerPort: 8080
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      tcpSocket:
        port: 8080
      timeoutSeconds: 1
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-g9vmk
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: multi-node-cluster2-worker
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-g9vmk
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-01-04T09:52:42Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-01-04T09:52:36Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-01-04T09:53:03Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-01-04T09:53:03Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-01-04T09:52:36Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://41235f3637bdb588e6c10d048a25cc6fc915e74e43449fd90743ffd1f2a183f2
    image: registry.k8s.io/goproxy:0.1
    imageID: registry.k8s.io/goproxy@sha256:5334c7ad43048e3538775cb09aaf184f5e8acf4b0ea60e3bc8f1d93c209865a5
    lastState: {}
    name: goproxy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-01-04T09:52:42Z"
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-g9vmk
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 172.19.0.4
  hostIPs:
  - ip: 172.19.0.4
  phase: Running
  podIP: 10.244.2.8
  podIPs:
  - ip: 10.244.2.8
  qosClass: BestEffort
  startTime: "2025-01-04T09:52:36Z"
