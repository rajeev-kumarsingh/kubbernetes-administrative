apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"class":"pods","env":"Production"},"name":"label-example","namespace":"default"},"spec":{"containers":[{"command":["bin/bash","-c","while true; do echo Hello Rajeev; sleep 5; done"],"image":"nginx","name":"label-example"}]}}
    creationTimestamp: "2025-01-15T06:36:36Z"
    labels:
      class: pods
      env: Production
      name: rajeev
    name: label-example
    namespace: default
    resourceVersion: "408625"
    uid: 14f3844e-f510-4705-a8ec-99a015767782
  spec:
    containers:
    - command:
      - bin/bash
      - -c
      - while true; do echo Hello Rajeev; sleep 5; done
      image: nginx
      imagePullPolicy: Always
      name: label-example
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zgsnz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: multi-node-cluster2-worker2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zgsnz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-15T06:36:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-15T06:36:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-15T06:36:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-15T06:36:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-15T06:36:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ccedcab05db00d6b04a7815aa8afa7c9915fe7c320192e8f572581f1498c1162
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:0a399eb16751829e1af26fea27b20c3ec28d7ab1fb72182879dcae1cca21206a
      lastState: {}
      name: label-example
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-15T06:36:40Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zgsnz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.19.0.4
    hostIPs:
    - ip: 172.19.0.4
    phase: Running
    podIP: 10.244.1.4
    podIPs:
    - ip: 10.244.1.4
    qosClass: BestEffort
    startTime: "2025-01-15T06:36:36Z"
kind: List
metadata:
  resourceVersion: ""
