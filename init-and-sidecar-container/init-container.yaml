apiVersion: v1
kind: Pod
metadata:
  name: web-server-pod
spec:
  initContainers:
  - name: write-ip # One init container named write-ip gets the pod IP using the MY_POD_IP env variable populated from the Pod's own status. and writes to an ip.txt file inside the /web-content volume attached to the pod.
    image: busybox
    resources:
      #Adding CPU/MEMORY resources
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 100m
        memory: 128Mi
    command: [ "sh", "-c", "echo $MY_POD_IP > /web-content/ip.txt; echo 'Wrote the Pod ip to ip.txt'" ]
    env:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    volumeMounts:
    - name: web-content
      mountPath: /web-content
  - name: create-html # The second init container named create-html reads the pod IP from /web-content/ip.txt file that contains the pod IP created by the first init container and writes it to /web-content/index.html file.
    image: busybox
    resources:
      #Adding CPU/MEMORY resources
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 100m
        memory: 128Mi
    command: [ "sh", "-c", "echo 'Hello, World your Pod IP is: ' > /web-content/index.html; cat /web-content/ip.txt >> /web-content/index.html; echo 'Created index.html with Pod IP'" ]
    volumeMounts:
    - name: web-content
      mountPath: /web-content
  containers:
  - name: web-container # Now, the main nginx container (web-container) mounts the default /usr/share/nginx/html to /web-content volume where we have the index.html file.
    image: nginx
    volumeMounts:
    - name: web-content
      mountPath: /usr/share/nginx/html
  volumes:
  - name: web-content
    emptyDir: {}
