apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-logs-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: nginx-sidecar-pod
  labels:
    app: nginx-sidecar
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "250m"
        memory: "256Mi"
    volumeMounts:
    - name: log-volume
      mountPath: /var/log/nginx
    livenessProbe:
      httpGet:
        path: /healthz
        port: 80
      initialDelaySeconds: 10
      periodSeconds: 5
    readinessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5
    startupProbe:
      httpGet:
        path: /
        port: 80
      failureThreshold: 30
      periodSeconds: 10

  - name: log-sidecar
    image: busybox
    command: [ "/bin/sh", "-c" ]
    args:
    - while true; do tail -f /var/log/nginx/access.log; done;
    resources:
      requests:
        cpu: "50m"
        memory: "64Mi"
      limits:
        cpu: "100m"
        memory: "128Mi"
    volumeMounts:
    - name: log-volume
      mountPath: /var/log/nginx
    livenessProbe:
      exec:
        command: [ "/bin/sh", "-c", "ps aux | grep tail | grep -v grep" ]
      initialDelaySeconds: 5
      periodSeconds: 10
    readinessProbe:
      exec:
        command: [ "/bin/sh", "-c", "test -f /var/log/nginx/access.log" ]
      initialDelaySeconds: 5
      periodSeconds: 10

  volumes:
  - name: log-volume
    persistentVolumeClaim:
      claimName: nginx-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx-sidecar
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
